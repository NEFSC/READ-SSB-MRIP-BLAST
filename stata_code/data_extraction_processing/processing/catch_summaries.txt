Ythe<<dd_version: 2>>

Effort  statistics 
===============================================================


BLAST inputs:

1.  Annual Length-frequency for cod and haddock. 
2.  Monthly Catch-per-trip for cod and haddock. 
3.  Total trips.  We will use FY 2022 data, but will need to figure something out for wave 1-2 of 2023.

Data cleaning
	
1.  id_code=="1757420210428005."  This is from April 2021.  I always drop this trip when computing anything cod related (L-F, C/trip, trips).
2. id_code== "1792820210410001" This is from April 2021. We drop trip when we are computing total trips, but we leave it when we calcluate catch-per-trip and length-per-trip


~~~~
<<dd_do:quietly>>
/* If you dyndoc this right after running your MRIP data processing code, you can comment this out.*/
do $MRIP_BLAST
global vintage_string 2022_10_27
global my_outputdir "${data_main}/MRIP_$vintage_string/monthly"

global FY_dir "${data_main}/MRIP_$vintage_string/fishing_years"
local my_common1 "atlanticcod"
local my_common2 "haddock"

global this_year = 2022
global last_year = $this_year-1
<</dd_do>>
~~~~

Here are monthly number of trips in Calendar Year <<dd_display: %4.0f $this_year>>. 



~~~~
<<dd_do:quietly>>
use "${my_outputdir}/`my_common1'_`my_common2'_target_${last_year}.dta", replace
sort year month 
<</dd_do>>

<<dd_do>>
list year month dtrip, abbreviate(16)
<</dd_do>>
~~~~


And here are monthly number trips for <<dd_display: %4.0f $this_year>>.  
~~~~
<<dd_do:quietly>>
use "${my_outputdir}/`my_common1'_`my_common2'_target_${this_year}.dta", replace
sort year month 
<</dd_do>>

<<dd_do>>
list year month dtrip, abbreviate(16)
<</dd_do>>
~~~~

Here are trips, by fishing year:

~~~~
<<dd_do:quietly>>
use "${FY_dir}/FY_targeting.dta", replace
/* 2018 has partial data in it (From April of 2019)*/
drop if fishing_year<$last_year
<</dd_do>>

<<dd_do>>
list, abbreviate(16)
<</dd_do>>
~~~~
FY 2022 data is partial


Catch Statistics for Cod  
===============================================================


Here are the cod (a, b1, b2) in numbers for Calendar Year <<dd_display: %4.0f $last_year>>.   Landings are the 2b95 method and landings_old are straight out of MRIP:
~~~~
<<dd_do:quietly>>
use "${my_outputdir}/`my_common1'_landings_${last_year}.dta", replace
sort year month 
format tot_cat a b1 b2 landings* %10.0fc
<</dd_do>>

<<dd_do>>
list , abbreviate(16)
<</dd_do>>
~~~~

Here are the cod (a, b1, b2) in numbers for Calendar Year <<dd_display: %4.0f $this_year>>. 
~~~~
<<dd_do:quietly>>
use "${my_outputdir}/`my_common1'_landings_${working_year}.dta", replace
sort year month 
format tot_cat a b1 b2 landings %10.0fc
<</dd_do>>

<<dd_do>>
list , abbreviate(16)
<</dd_do>>
~~~~



Here are the cod (a+b1 and b2) in weights and numbers for Calendar Year<<dd_display: %4.0f $last_year>>. This uses the 2b95 method.  
~~~~
<<dd_do:quietly>>
use "${data_main}/MRIP_${vintage_string}/monthly/cod_weights_${last_year}.dta", clear
replace ab1weight=ab1weight/2204
rename ab1weight ab1mt
replace b2weight=b2weight/2204
rename b2weight b2mt
sort year month 
format ab1mt b2mt %10.2fc
format ab1_count b2_count %10.0fc
keep if year==$last_year
<</dd_do>>


<<dd_do>>
list year month ab1mt b2mt ab1_count b2_count , abbreviate(16)
<</dd_do>>
~~~~



Here are the cod (a+b1 and b2) in weights and numbers for Calendar Year <<dd_display: %4.0f $this_year>>. 
~~~~
<<dd_do:quietly>>
use "${data_main}/MRIP_${vintage_string}/monthly/cod_weights_${this_year}.dta", clear
replace ab1weight=ab1weight/2204
rename ab1weight ab1mt
replace b2weight=b2weight/2204
rename b2weight b2mt
sort year month 
format ab1mt b2mt %10.2fc
format ab1_count b2_count %10.0fc
keep if year==$this_year
<</dd_do>>
<<dd_do>>

list year month ab1mt b2mt ab1_count b2_count , abbreviate(16)
<</dd_do>>
~~~~




Catch Statistics for Haddock  
===============================================================


Here are the haddock (a, b1, b2) in numbers for Calendar Year <<dd_display: %4.0f $last_year>>. 
~~~~
<<dd_do:quietly>>
use "${my_outputdir}/`my_common2'_landings_${last_year}.dta", replace
sort year month 
format tot_catch a b1 b2 landings %10.0fc
<</dd_do>>
<<dd_do>>
list , abbreviate(16)
<</dd_do>>
~~~~

Here are the haddock (a, b1, b2) in numbers for Calendar Year <<dd_display: %4.0f $this_year>>.
~~~~
<<dd_do:quietly>>
use "${my_outputdir}/`my_common2'_landings_${this_year}.dta", replace
sort year month 
format tot_catch a b1 b2 landings* %10.0fc
<</dd_do>>
<<dd_do>>
list , abbreviate(16)
<</dd_do>>
~~~~




Here are the haddock (a+b1 and b2) in weights and numbers for Calendar Year <<dd_display: %4.0f $last_year>>.  
~~~~
<<dd_do:quietly>>
use "${data_main}/MRIP_${vintage_string}/monthly/haddock_weights_${last_year}.dta", clear
replace ab1weight=ab1weight/2204
rename ab1weight ab1mt
replace b2weight=b2weight/2204
rename b2weight b2mt
sort year month 
format ab1mt b2mt %10.2fc
format ab1_count b2_count %10.0fc
keep if year==$last_year
<</dd_do>>

<<dd_do>>
list year month ab1mt b2mt ab1_count b2_count , abbreviate(16)
<</dd_do>>
~~~~



Here are the haddock (a+b1 and b2) in weights and numbers for Calendar Year <<dd_display: %4.0f $this_year>>.
~~~~
<<dd_do:quietly>>
use "${data_main}/MRIP_${vintage_string}/monthly/haddock_weights_${this_year}.dta", clear
replace ab1weight=ab1weight/2204
rename ab1weight ab1mt
replace b2weight=b2weight/2204
rename b2weight b2mt
sort year month 
format ab1mt b2mt %10.2fc
format ab1_count b2_count %10.0fc
keep if year==$this_year
<</dd_do>>
<<dd_do>>
list year month ab1mt b2mt ab1_count b2_count , abbreviate(16)
<</dd_do>>
~~~~


















<!---

This is the monthly number of a+b1s of Cod, after we apply the 2b95 method. I don't know how to do the 2b95 method.  I'll just have to read it in when I'm assembling those data.

| Year | Month |Trimmed_Landings|
| :------ | :---- | ------- :|
|2020| 	5 |63|
|2020 |	6 |2,267|
|2020 |	7 |1,465|
|2020 |	8 |3,912|
|2020 |	9 |7,829|
|2020 |	10 |955|
|2020 |	11 |0  |
|2021 |	4 | 1,434|
|2021 |	5  |10|
|2021 |	6  |517|
|2021 |	7  |61|
|2021 |	8  |258 |
--->